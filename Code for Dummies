
Step 1 to setting up a website:
As you've seen in the previous projects, webpages should start with a DOCTYPE html declaration, followed by an html element.

Add a DOCTYPE html declaration at the top of the document, and an html element after that. Give the html element a lang attribute with en as its value.
 ex:  <!DOCTYPE html>
      <html lang="en"></html>
a - element used to anchor
 <a href='https://freecodecamp.org'></a>
 STep 2:
 To tell browsers how to encode characters on your page, set the charset to utf-8. utf-8 is a universal character set that includes almost every character from all human languages.

Inside the head element, nest a meta element with the attribute charset set to utf-8. Remember that meta elements are self-closing, and do not need a closing tag.
ex: <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
links
<p>Click here to view more <a href="https://freecatphotoapp.com">cat photos</a>.</p>


href (attribute) -  

attribute - activated with (attribute)="attribute value"

target attribute
_blank - example below. Ask alex how tf this makes sense 
```
      <p>Click here to view more <a href="https://freecatphotoapp.com"target=_blank>cat photos</a>.</p>
```
 <p>CLick here to view more <a href="https://freecatphotoapp.com">cat photoss</a>.</p>

Links 
https://www.freecodecamp.org/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-14 

section - element

Image with alt example
<img src="https://cdn.freecodecamp.org/curriculum/cat-photo-app/lasagna.jpg" alt="A slice of lasagna on a plate">

Button with type and text example
<button type="Submit">Submit</button>

radio - bubble selector that switches back and forth
Have alex explain this:
If you select the Indoor radio button and submit the form, the form data for the button is based on its name and value attributes. Since your radio buttons do not have a value attribute, the form data will include indoor-outdoor=on, which is not useful when you have multiple buttons.

Add a value attribute to both radio buttons. For convenience, set the button's value attribute to the same value as its id attribute.

example code: <label><input value="indoor" id="indoor" type="radio" name="indoor-outdoor"> Indoor</label>
          <label><input value="outdoor" id="outdoor" type="radio" name="indoor-outdoor"> Outdoor</label>

fieldset - The fieldset element is used to group related inputs and labels together in a web form.

Ask Alex why this doesn't neet a closing tag:
<legend>What's your cat's personality?</legend>
            <input type="checkbox"> Loving 
						Alex said that input is self closing
One more thing. You should allow people to use their native language. Tell the browser to encode multiple languages by adding a meta element as a child of the head element. Set its charset attribute to UTF-8:
<head>
    <meta charset="UTF-8">
    <title>CatPhotoApp</title>
  </head>

	7/19/22
	Center Heading:
	"element/selector" {property: value;} ex:
 ^^ can add more properties to selectors after semicolon, just code on a new line for clean code
	<style>
      h1 {
        text-align: center;
      }
    </style>
		another example:
		<style>
      h1, h2, p {
        text-align: center;
      }
    </style>

		You have styled three elements by writing CSS inside the style tags. This works, but since there will be many more styles, it's best to put all the styles in a separate file and link to it.

We have created a separate styles.css file for you and switched the editor view to that file. You can change between files with the tabs at the top of the editor.

Start by rewriting the styles you have created into the styles.css file. Make sure to exclude the opening and closing style tags.

<style>
  h1, h2, p {
    text-align: center;
  }
  </style>

Mobile device 
<meta name="viewport" content="width=device-width, initial-scale=1.0" />

/* comment here */ - a way to not have code show up or executed

Can change width with pixels (px) or percentage (%)

A class selector is defined by a name with a dot directly in front of it, like this
.class-name {
  styles
}

To apply the class's styling to the div element, add a class attribute to the div element's opening tag and set its value to menu. 
Ex: <div class="menu" />

test
code in style css tab :
body {
 font-family: sans-serif;
  background-image: url(https://cdn.freecodecamp.org/curriculum/css-cafe/beans.jpg);
}
fonts: You can add a fallback value for the font-family by adding another font name separated by a comma. Fallbacks are used in instances where the initial is not found/available.

Add the fallback font serif after the Impact font.

Notice how the thickness of the line looks bigger? The default value of a property named border-width is 1px for all edges of hr elements. By changing the border to the same color as the background, the total height of the line is 5px (3px plus the top and bottom border width of 1px).

You change properties of a link when the link has actually been visited by using a pseudo-selector that looks like a:visited { propertyName: propertyValue; }.{ propertyName: propertyValue; }
ex: a:visited {
    color: grey;
}

You change properties of a link when the mouse hovers over them by using a pseudo-selector that looks like a:hover { propertyName: propertyValue; }

You change properties of a link when the link is actually being clicked by using a pseudo-selector that looks like a:active { propertyName: propertyValue; }.

To center your marker on the page, set its margin property to auto. This sets margin-top, margin-right, margin-bottom, and margin-left all to auto.

These days, there are two main color models: the additive RGB (red, green, blue) model used in electronic devices, and the subtractive CMYK (cyan, magenta, yellow, black) model used in print. In this project you'll work with the RGB model


one way to set color to red in a class in CSS:
.one {
  background-color: rgb(255, 0, 0);
}
max of a color for red, green, blue = 255

background-color: rgb(0, 0, 0); black
background-color: rgb(255, 255, 255); white
Secondary colors---
background-color: rgb(255, 255, 0); yellow
background-color: rgb(0, 255, 255); cyan
background-color: rgb(255, 0, 255); magenta
Tertiary colors---
  background-color: rgb(255, 127, 0); orange
  background-color: rgb(0, 255, 127); spring green
	background-color: rgb(127, 0, 255); violet
	background-color: rgb(255, 0, 127); rose
	background-color: rgb(0, 127, 255); azure
	background-color: rgb(127, 255, 0); chartreuse 

	A very common way to apply color to an element with CSS is with hexadecimal or hex values. While hex values sound complicated, they're really just another form of RGB values.

Hex color values start with a # character and take six characters from 0-9 and A-F. The first pair of characters represent red, the second pair represent green, and the third pair represent blue. For example, #4B5320.

In the .green CSS rule, set the background-color property to a hex color code with the values 00 for red, FF for green, and 00 blue.
background-color: #00FF00;

You may already be familiar with decimal, or base 10 values, which go from 0 - 9. Hexadecimal, or base 16 values, go from 0 - 9, then A - F:

0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F
With hex colors, 00 is 0% of that color, and FF is 100%. So #00FF00 translates to 0% red, 100% green, and 0% blue, and is the same as rgb(0, 255, 0).
ex: 00FF00 - high intensity green
    007F00 - lower intensity green